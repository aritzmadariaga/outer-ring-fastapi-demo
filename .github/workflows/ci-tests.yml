name: CI â€” Tests & Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install uv
          uv sync
      - name: Wait for MariaDB to be ready
        env:
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
        run: |
          python - <<'PY'
          import socket, time, os, sys
          host = os.environ.get('DB_HOST', '127.0.0.1')
          port = int(os.environ.get('DB_PORT', '3306'))
          timeout = 60
          interval = 2
          deadline = time.time() + timeout
          while time.time() < deadline:
              try:
                  s = socket.create_connection((host, port), timeout=2)
                  s.close()
                  print(f"DB reachable at {host}:{port}")
                  sys.exit(0)
              except Exception as e:
                  print(f"Waiting for DB {host}:{port}: {e}")
                  time.sleep(interval)
          print("Timed out waiting for DB")
          sys.exit(1)
          PY
      - name: Run unit tests (produce coverage files)
        env:
          COVERAGE_FILE: .coverage.unit
        run: |
          pytest --cov=src --cov-report=xml:coverage-unit.xml tests/unit
      - name: Upload unit coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-unit
          path: |
            .coverage.unit
            coverage-unit.xml

  integration:
    name: Integration tests
    runs-on: ubuntu-latest
    services:
      db:
        image: mariadb:11
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: outer_ring_test
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mariadb-admin ping -h localhost -u root -prootpassword"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          pip install uv
          uv sync
      - name: Run integration tests (produce coverage files)
        env:
          COVERAGE_FILE: .coverage.integration
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_NAME: outer_ring_test
          DB_USER: user
          DB_PASSWORD: password
          DB_ROOT_PASSWORD: rootpassword
          PYTHONPATH: .
        run: |
          pytest --cov=src --cov-report=xml:coverage-integration.xml tests/integration
      - name: Upload integration coverage artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-integration
          path: |
            .coverage.integration
            coverage-integration.xml

  combine-and-upload:
    name: Combine coverage and upload
    runs-on: ubuntu-latest
    needs: [unit, integration]
    steps:
      - uses: actions/checkout@v3
      - name: Download unit coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-unit
          path: artifacts/unit
      - name: Download integration coverage artifact
        uses: actions/download-artifact@v4
        with:
          name: coverage-integration
          path: artifacts/integration
      - name: Install coverage
        run: pip install coverage
      - name: Combine coverage files
        run: |
          ls -la artifacts/unit || true
          ls -la artifacts/integration || true
          mv artifacts/unit/.coverage.unit . || true
          mv artifacts/integration/.coverage.integration . || true
          coverage combine .coverage.unit .coverage.integration || true
          coverage xml -o coverage.xml
      - name: Upload combined coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
